# Configuração de Ambiente - Radar WebScrapping
# Copie este arquivo para .env e configure conforme necessário

# ===== AMBIENTE =====
# Ambiente de execução (development, testing, production, docker)
APP_ENV=development

# Timezone
TZ=America/Bahia

# ===== BANCO DE DADOS =====
# SQLite (desenvolvimento local)
DATABASE_URL=sqlite+aiosqlite:///data/radar_webscrapping.db

# PostgreSQL (produção/docker)
# DATABASE_URL=postgresql+asyncpg://radar_user:radar_password@localhost:5432/radar_webscrapping

# Pool de conexões (para PostgreSQL)
DATABASE_POOL_SIZE=5
DATABASE_MAX_OVERFLOW=10

# ===== REDIS (CACHE) =====
# URL do Redis (opcional, para cache)
# REDIS_URL=redis://localhost:6379/0
REDIS_TIMEOUT=5
REDIS_MAX_CONNECTIONS=10

# ===== RADAR API =====
# URL base da API do sistema Radar
RADAR_API_BASE_URL=http://localhost:8080/api

# Chave de API para autenticação
RADAR_API_KEY=your-api-key-here

# Timeout para requisições HTTP (segundos)
RADAR_API_TIMEOUT=30

# Número máximo de tentativas
RADAR_API_MAX_RETRIES=3

# ===== SIGAA UFBA =====
# URLs do SIGAA
SIGAA_BASE_URL=https://sigaa.ufba.br
SIGAA_CURSOS_URL=https://sigaa.ufba.br/sigaa/public/curso/busca_curso_form.jsf

# Delay entre requisições para evitar bloqueio (segundos)
SIGAA_DELAY_BETWEEN_REQUESTS=2.0

# ===== SELENIUM WEBDRIVER =====
# Modo headless (true/false)
SELENIUM_HEADLESS=true

# Timeout padrão (segundos)
SELENIUM_TIMEOUT=30

# Tempo de espera implícito (segundos)
SELENIUM_IMPLICIT_WAIT=10

# Caminho personalizado para ChromeDriver (opcional)
# CHROMEDRIVER_PATH=/usr/local/bin/chromedriver

# ===== LOGGING =====
# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Formato de log (simple, detailed, json)
LOG_FORMAT=detailed

# Arquivo de log (deixe vazio para console apenas)
LOG_FILE=logs/radar_webscrapping.log

# Rotação de logs
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# ===== CONFIGURAÇÕES DE SCRAPING =====
# Número máximo de tentativas por operação
SCRAPING_MAX_RETRIES=3

# Timeout para operações de scraping (segundos)
SCRAPING_TIMEOUT=60

# Tamanho do lote para processamento
SCRAPING_BATCH_SIZE=10

# Limite de requisições concorrentes
SCRAPING_CONCURRENT_LIMIT=5

# User-Agent para requisições HTTP
HTTP_USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36

# ===== DOCKER ESPECÍFICO =====
# Configurações quando executando em Docker
DOCKER_ENV=false

# Configurações de rede para Docker
DOCKER_NETWORK=radar-network

# ===== DESENVOLVIMENTO =====
# Modo debug
DEBUG=false

# Recarregar automaticamente em mudanças
RELOAD_ON_CHANGE=false

# Salvar dados de debug
SAVE_DEBUG_DATA=false

# ===== AGENDAMENTO =====
# Cron expression para execução automática (padrão: 2h da manhã todos os dias)
SCRAPING_SCHEDULE=0 2 * * *

# Habilitar agendamento automático
ENABLE_SCHEDULER=false

# ===== MONITORAMENTO =====
# Habilitar métricas Prometheus
ENABLE_METRICS=false

# Porta para métricas
METRICS_PORT=9090

# ===== INTEGRAÇÃO COM RADAR-INFRA =====
# Estas variáveis são definidas pelo docker-compose do radar-infra
# RADAR_API_URL=http://radar-webapi:8080
# RADAR_API_KEY=your-production-api-key
# SCRAPING_SCHEDULE=0 2 * * *
# LOG_LEVEL=INFO